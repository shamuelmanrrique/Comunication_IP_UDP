2019/11/06 20:28:46 ###################### MAIN  TCP 127.0.1.1:5002 ########################### 
2019/11/06 20:29:35 ###################### MAIN  TCP 127.0.1.1:5002 ########################### 
2019/11/06 20:29:40  RECEIVE -->: from  127.0.1.1:5001  to  127.0.1.1:5002 || OBJ:  127.0.1.1:5002 
                     Vector:  map[127.0.1.1:5001:1 127.0.1.1:5002:0 127.0.1.1:5003:0]
2019/11/06 20:29:40  ++> SEND : from  127.0.1.1:5002  to  127.0.1.1:5003 || OBJ:   
                     Vector:  map[127.0.1.1:5001:1 127.0.1.1:5002:2 127.0.1.1:5003:0]
2019/11/06 20:29:40  ++> SEND : from  127.0.1.1:5002  to  127.0.1.1:5001 || OBJ:   
                     Vector:  map[127.0.1.1:5001:1 127.0.1.1:5002:2 127.0.1.1:5003:0]
2019/11/06 20:29:46 #########################  Output Message ################################# 
2019/11/06 20:29:46 [Message] --> 127.0.1.1:5001 kill 127.0.1.1:5002 |||| Vector: map[127.0.1.1:5001:1 127.0.1.1:5002:0 127.0.1.1:5003:0]
2019/11/06 20:37:34 ###################### MAIN  UDP 127.0.1.1:5002 ########################### 
2019/11/06 20:37:38  RECEIVE MULTICAST-->: from  127.0.1.1:5001  to  229.0.40.000:9999   || OBJ:  127.0.1.1:5002 
                                 Vector:  map[127.0.1.1:5001:1 127.0.1.1:5002:0 127.0.1.1:5003:0]
2019/11/06 20:37:38  ++> SEND : ACK to:  127.0.1.1:5001 code: &{127.0.1.1:5002 127.0.1.1:5002,127.0.1.1:5001}
2019/11/06 20:37:38  RECEIVE --> ACK from:  127.0.1.1:5001 code: {127.0.1.1:5001 127.0.1.1:5001,127.0.1.1:5002}
2019/11/06 20:37:38  RECEIVE --> ACK from:  127.0.1.1:5003 code: {127.0.1.1:5003 127.0.1.1:5003,127.0.1.1:5002}
2019/11/06 20:38:10 #########################  Output Message ################################# 
2019/11/06 20:38:10 [Message] --> 127.0.1.1:5001 kill 127.0.1.1:5002
2019/11/06 20:40:01 ###################### MAIN  ChandyLamport 127.0.1.1:5002 ########################### 
2019/11/06 20:40:06  RECEIVE -->: from  127.0.1.1:5001  to  127.0.1.1:5002   || OBJ:  127.0.1.1:5002 
                     Vector:  map[127.0.1.1:5001:1 127.0.1.1:5002:0 127.0.1.1:5003:0]
2019/11/06 20:40:06  ++> SEND MSM: from  127.0.1.1:5002  to  127.0.1.1:5003   || OBJ:   
                     Vector:  map[127.0.1.1:5001:1 127.0.1.1:5002:2 127.0.1.1:5003:0]
2019/11/06 20:40:06  ++> SEND MSM: from  127.0.1.1:5002  to  127.0.1.1:5001   || OBJ:   
                     Vector:  map[127.0.1.1:5001:1 127.0.1.1:5002:2 127.0.1.1:5003:0]
2019/11/06 20:40:14  RECEIVE --> ACK from:  127.0.1.1:5001,127.0.1.1:5002
2019/11/06 20:40:14  ++> SEND COUNT: to  127.0.1.1:5001   |||| Count:  127.0.1.1:5002,127.0.1.1:5001
2019/11/06 20:40:14  ++> SEND COUNT: to  127.0.1.1:5003   |||| Count:  127.0.1.1:5002,127.0.1.1:5003
2019/11/06 20:40:14  RECEIVE --> ACK from:  127.0.1.1:5003,127.0.1.1:5002
2019/11/06 20:40:29 ################### SNAPSHOT 127.0.1.1:5002 #####################
2019/11/06 20:40:29 Init state: [{127.0.1.1:5002 127.0.1.1:5001 kill 127.0.1.1:5002 0s map[127.0.1.1:5001:1 127.0.1.1:5002:0 127.0.1.1:5003:0]}]
2019/11/06 20:40:29 Recording: [{127.0.1.1:5002 127.0.1.1:5001 kill 127.0.1.1:5002 0s map[127.0.1.1:5001:1 127.0.1.1:5002:0 127.0.1.1:5003:0]}]
2019/11/06 20:40:29 CheckPoints: [127.0.1.1:5001,127.0.1.1:5002 127.0.1.1:5003,127.0.1.1:5002]
2019/11/06 20:40:29 #########################  Output Message ################################# 
2019/11/06 20:40:29 [Message] --> 127.0.1.1:5001 kill 127.0.1.1:5002
